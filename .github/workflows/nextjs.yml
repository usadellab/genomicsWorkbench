# name: Deploy Next.js site to GitHub Pages

# on:
#   push:
#     branches:
#       - master  # Adjust to your main branch name
#   workflow_dispatch:

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '21.6.0'

#       - name: Install dependencies
#         working-directory: docs  # Specify the docs folder as working directory
#         run: npm install

#       - name: Build and export Next.js app
#         working-directory: docs  # Specify the docs folder as working directory
#         run: |
#           npm run export
#           mv ./out ./.out


#       - name: Deploy to GitHub Pages
#         uses: peaceiris/actions-gh-pages@v4
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: ./docs # Adjust the directory where Next.js exported files are stored
#           keep_files: true    # Keep existing files in the deployment branch

name: Deploy Next.js site to Pages

on:
  push:
    branches: ["master"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: docs  # Ensure the 'working-directory' is set correctly in other steps

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/docs/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/docs/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21.6.0'

      - name: Install dependencies
        working-directory: docs  # Specify the docs folder as working directory
        run: |
          cd docs
          npm install
          npm install -g next

      # - name: Setup Node
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: "20"
      #     cache: ${{ steps.detect-package-manager.outputs.manager }}

      # - name: Setup Pages
      #   uses: actions/configure-pages@v5
      #   with:
      #     static_site_generator: next

      # - name: Restore cache
      #   uses: actions/cache@v4
      #   with:
      #     path: docs/.next/cache
      #     key: ${{ runner.os }}-nextjs-${{ hashFiles('docs/package-lock.json', 'docs/yarn.lock') }}-${{ hashFiles('docs/**/*.[jt]s', 'docs/**/*.[jt]sx') }}
      #     restore-keys: |
      #       ${{ runner.os }}-nextjs-${{ hashFiles('docs/package-lock.json', 'docs/yarn.lock') }}-

      # - name: Install dependencies
      #   run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      #   working-directory: docs

      - name: Build with Next.js
        working-directory: docs
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          # github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/out
